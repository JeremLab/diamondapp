[{"name":"app.R","content":"library(shiny)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(bslib)\nlibrary(thematic)\nlibrary(glue)\nlibrary(dplyr)\ndata(\"diamonds\")\n\nthematic_shiny(font = \"auto\")\n\nui <- fluidPage(\n    theme = bs_theme(version = 5,\n                   bootswatch = \"minty\"),\n    h3(\"Explorations des Diamants\"),\n\n    sidebarLayout(\n        sidebarPanel(\n        radioButtons(inputId = \"Couleur\",\n                     label = \"Colorier les points en rose ?\",\n                     choices = c(\"Oui\",\"Non\"),\n                     selected = \"Oui\",\n                     inline = TRUE),\n        selectInput(\n          inputId = \"choix_couleur\",\n          choices = unique(diamonds$color),\n          label = \"Choisir une couleur Ã  filtrer :\",\n          selected = NULL,\n          multiple = FALSE,\n          selectize = TRUE,\n          width = NULL,\n          size = NULL\n        ),\n        sliderInput(inputId = \"prix\",\n                    label = \"Prix maximum :\",\n                    min = 300,\n                    max = 20000,\n                    value = 300),\n        actionButton(inputId = \"boutton\",\n                     label = \"Afficher une notification\"),\n        ),\n        mainPanel(\n           plotOutput(\"DiamondPlot\"),\n           DTOutput(\"DiamandsTable\")\n        )\n    )\n)\n\nserver <- function(input, output) {\n\n    output$DiamondPlot <- renderPlot({\n      diamonds |> \n      filter(price <= input$prix) |>\n      filter(color == input$choix_couleur) |>\n      ggplot(aes(x= carat, y = price)) +\n      geom_point(color = ifelse(input$Couleur == \"Oui\", \"pink\", \"black\"),\n                 size = 1) +\n        labs(\n          title = glue(\"prix : {input$prix} & color : {input$choix_couleur}\")\n        )\n    })\n    output$DiamandsTable <- renderDT({\n      diamonds |>\n        filter(price <= input$prix) |>\n        filter(color == input$choix_couleur) |>\n        select(carat, cut, color, clarity, depth, table, price)\n    })\n    observeEvent(input$boutton, { \n      showNotification(glue(\"prix: {input$prix} & color: {input$choix_couleur}\"), \n                       type = \"message\") \n      })\n}\n\nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"project.Rproj","content":"Version: 1.0\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"}]
